{"version":3,"sources":["components/Form/Form.jsx","components/Todo/Todo.jsx","components/TodoList/TodoList.jsx","api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["Form","onSearch","onComplete","className","type","id","placeholder","onChange","name","value","Todo","userId","title","completed","onUserClick","classNames","checked","readOnly","onClick","TodoList","allTodos","onUserSelect","useState","todos","setTodos","category","setCategory","query","setQuery","categoryFilters","all","active","todo","filterTodos","searchQuery","selectedCategory","isTodoIncludesCategory","filter","toLowerCase","includes","isTitleIncludesQuery","event","target","map","key","defaultProps","BASE_URL","fetchData","baseUrl","path","fetch","then","response","json","result","data","CurrentUser","state","user","this","loadUser","prevProps","props","setState","email","phone","onClear","React","PureComponent","App","selectedUserId","clearSelectUserId","selectUserId","length","ReactDOM","render","document","getElementById"],"mappings":"iaAIMA,G,YAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,WAAb,OACX,0BAAMC,UAAU,kBACd,2BACEC,KAAK,OACLC,GAAG,eACHF,UAAU,kBACVG,YAAY,QACZC,SAAUN,IAGZ,4BACEO,KAAK,cACLD,SAAUL,GAEV,4BAAQO,MAAM,OAAd,aAGA,4BAAQA,MAAM,UAAd,gBAGA,4BAAQA,MAAM,aAAd,uB,iBCpBAC,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,MAAOC,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,YAA7B,OACX,wBACEX,UAAYY,IAAW,iBACrB,CAAE,4BAA6BF,KAEjC,+BACE,2BAAOT,KAAK,WAAWY,QAASH,EAAWI,UAAQ,IACnD,2BAAIL,IAGN,4BACET,UAAU,+BACVC,KAAK,SACLc,QAAS,kBAAMJ,EAAYH,KAH7B,YAMGA,KCdDQ,EAAW,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,aAAmB,EACrBC,mBAASF,GADY,mBACxCG,EADwC,KACjCC,EADiC,OAEfF,mBAAS,OAFM,mBAExCG,EAFwC,KAE9BC,EAF8B,OAGrBJ,mBAAS,IAHY,mBAGxCK,EAHwC,KAGjCC,EAHiC,KAKzCC,EAAkB,CACtBC,IAAK,kBAAM,GACXC,OAAQ,SAAAC,GAAI,OAAKA,EAAKnB,WACtBA,UAAW,SAAAmB,GAAI,OAAIA,EAAKnB,YAsBpBoB,EAAc,SAACC,EAAaC,GAChC,IAAMC,EAAyBP,EAAgBM,GAE/CX,EAAS,YAAIJ,GACViB,QAAO,SAAAL,GAAI,OAPa,SAACpB,EAAOsB,GAAR,OAAwBtB,GAChDA,EAAM0B,cAAcC,SAASL,EAAYI,eAM1BE,CAAqBR,EAAKpB,MAAOsB,IAC5CE,EAAuBJ,QAGhC,OACE,yBAAK7B,UAAU,YACb,sCAEA,kBAAC,EAAD,CAAMF,SAvBO,SAACwC,GAAW,IACnBhC,EAAUgC,EAAMC,OAAhBjC,MAERmB,EAASnB,GAETwB,EAAYxB,EAAOgB,IAkBSvB,WA/BX,SAACuC,GAAW,IACrBhC,EAAUgC,EAAMC,OAAhBjC,MAERiB,EAAYjB,GAEZwB,EAAYN,EAAOlB,MA4BjB,yBAAKN,UAAU,4BACb,wBAAIA,UAAU,kBACXoB,EAAMoB,KAAI,SAAAX,GAAI,OACb,kBAAC,EAAD,eAAMY,IAAKZ,EAAK3B,IAAQ2B,EAAxB,CAA8BlB,YAAaO,YAQvDF,EAAS0B,aAAe,CACtBzB,SAAU,CDrCZV,EAAKmC,aAAe,CAClBlC,OAAQ,EACRE,WAAW,EACXD,MAAO,cE5BT,IAAMkC,EAAW,iCAEjB,SAASC,EAAUC,EAASC,GAC1B,OAAOC,MAAM,GAAD,OAAIF,EAAJ,YAAeC,IACxBE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAIA,EAAOC,Q,MAGpB,ICHDC,E,4MACJC,MAAQ,CACNC,KAAM,I,kEAINC,KAAKC,a,yCAGYC,GACbA,EAAUlD,SAAWgD,KAAKG,MAAMnD,QAClCgD,KAAKC,a,iKDNgBvD,ECWQsD,KAAKG,MAAMnD,ODXboC,EAAUD,EAAD,gBAAoBzC,I,gDCWL,G,OAA/CqD,E,KAENC,KAAKI,SAAS,CACZL,S,iCDdqB,IAAArD,I,iGCkBf,IAAD,EACoCsD,KAAKF,MAAMC,KAA9CrD,EADD,EACCA,GAAIM,EADL,EACKA,OAAQH,EADb,EACaA,KAAMwD,EADnB,EACmBA,MAAOC,EAD1B,EAC0BA,MAEjC,OACE,yBAAK9D,UAAU,eACb,wBAAIA,UAAU,sBACZ,mDAEGE,GAAMM,GAAU,YAIrB,wBAAIR,UAAU,qBACXK,GAAQ,WAEX,uBAAGL,UAAU,sBACV6D,GAAS,YAEZ,uBAAG7D,UAAU,sBACV8D,GAAS,YAGZ,4BACE7D,KAAK,SACLD,UAAU,6BACVe,QAASyC,KAAKG,MAAMI,SAHtB,c,GA7CkBC,IAAMC,eC0DjBC,E,4MAvDbZ,MAAQ,CACNlC,MAAO,GACP+C,eAAgB,G,EAalBC,kBAAoB,WAClB,EAAKC,aAAa,I,EAGpBA,aAAe,SAACnE,GACd,EAAK0D,UAAS,SAAAN,GAAK,kCACdA,GADc,IAEjBa,eAAgBjE,Q,kMFtBW0C,EAAUD,EAAU,S,OEM3CvB,E,OACHc,QAAO,gBAAGzB,EAAH,EAAGA,MAAkBD,GAArB,EAAUE,UAAV,EAAqBF,QAArB,OAAkCC,GAASD,KAErDgD,KAAKI,UAAS,SAAAN,GAAK,kCACdA,GADc,IAEjBlC,a,qIAeM,IAAD,EAC2BoC,KAAKF,MAA/BlC,EADD,EACCA,MAAO+C,EADR,EACQA,eAEf,OACE,yBAAKnE,UAAU,OACb,yBAAKA,UAAU,gBACZoB,EAAMkD,OAAS,EACd,kBAAC,EAAD,CACErD,SAAUG,EACVF,aAAcsC,KAAKa,eAEnB,sBAGN,yBAAKrE,UAAU,gBACb,yBAAKA,UAAU,0BACZmE,EACC,kBAAC,EAAD,CACE3D,OAAQ2D,EACRJ,QAASP,KAAKY,oBAEd,0B,GAhDEJ,IAAMC,eCHxBM,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.1226803b.chunk.js","sourcesContent":["import React from 'react';\nimport './Form.scss';\nimport PropTypes from 'prop-types';\n\nconst Form = ({ onSearch, onComplete }) => (\n  <form className=\"TodoList__form\">\n    <input\n      type=\"text\"\n      id=\"search-query\"\n      className=\"TodoList__enter\"\n      placeholder=\"Enter\"\n      onChange={onSearch}\n    />\n\n    <select\n      name=\"todosFilter\"\n      onChange={onComplete}\n    >\n      <option value=\"all\">\n        All todos\n      </option>\n      <option value=\"active\">\n        Active todos\n      </option>\n      <option value=\"completed\">\n        Completed todos\n      </option>\n    </select>\n\n  </form>\n);\n\nForm.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n  onComplete: PropTypes.func.isRequired,\n};\n\nexport { Form };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst Todo = ({ userId, title, completed, onUserClick }) => (\n  <li\n    className={(classNames('TodoList__item',\n      { 'TodoList__item--unchecked': completed }))}\n  >\n    <label>\n      <input type=\"checkbox\" checked={completed} readOnly />\n      <p>{title}</p>\n    </label>\n\n    <button\n      className=\"TodoList__user-button button\"\n      type=\"button\"\n      onClick={() => onUserClick(userId)}\n    >\n      User&nbsp;#\n      {userId}\n    </button>\n  </li>\n);\n\nTodo.defaultProps = {\n  userId: 0,\n  completed: false,\n  title: 'No title',\n};\n\nTodo.propTypes = {\n  userId: PropTypes.number,\n  title: PropTypes.string,\n  completed: PropTypes.bool,\n  onUserClick: PropTypes.func.isRequired,\n};\n\nexport { Todo };\n","import React, { useState } from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\nimport { Form } from '../Form';\nimport { Todo } from '../Todo';\n\nconst TodoList = ({ allTodos, onUserSelect }) => {\n  const [todos, setTodos] = useState(allTodos);\n  const [category, setCategory] = useState('all');\n  const [query, setQuery] = useState('');\n\n  const categoryFilters = {\n    all: () => true,\n    active: todo => !todo.completed,\n    completed: todo => todo.completed,\n  };\n\n  const onComplete = (event) => {\n    const { value } = event.target;\n\n    setCategory(value);\n\n    filterTodos(query, value);\n  };\n\n  const onSearch = (event) => {\n    const { value } = event.target;\n\n    setQuery(value);\n\n    filterTodos(value, category);\n  };\n\n  const isTitleIncludesQuery = (title, searchQuery) => title\n    && title.toLowerCase().includes(searchQuery.toLowerCase());\n\n  const filterTodos = (searchQuery, selectedCategory) => {\n    const isTodoIncludesCategory = categoryFilters[selectedCategory];\n\n    setTodos([...allTodos]\n      .filter(todo => isTitleIncludesQuery(todo.title, searchQuery)\n        && isTodoIncludesCategory(todo)));\n  };\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n\n      <Form onSearch={onSearch} onComplete={onComplete} />\n\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\">\n          {todos.map(todo => (\n            <Todo key={todo.id} {...todo} onUserClick={onUserSelect} />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nTodoList.defaultProps = {\n  allTodos: [\n    Todo.defaultProps,\n  ],\n};\n\nTodoList.propTypes = {\n  allTodos: PropTypes.arrayOf(\n    PropTypes.shape({\n      userId: PropTypes.number,\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n  onUserSelect: PropTypes.func.isRequired,\n};\n\nexport { TodoList };\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nfunction fetchData(baseUrl, path) {\n  return fetch(`${baseUrl}/${path}`)\n    .then(response => response.json())\n    .then(result => result.data);\n}\n\nexport const getAllTodos = () => fetchData(BASE_URL, 'todos');\n\nexport const getUserById = id => fetchData(BASE_URL, `users/${id}`);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getUserById } from '../../api';\nimport './CurrentUser.scss';\n\nclass CurrentUser extends React.PureComponent {\n  state = {\n    user: {},\n  }\n\n  componentDidMount() {\n    this.loadUser();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadUser();\n    }\n  }\n\n  async loadUser() {\n    const user = await getUserById(this.props.userId) || {};\n\n    this.setState({\n      user,\n    });\n  }\n\n  render() {\n    const { id, userId, name, email, phone } = this.state.user;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:&nbsp;\n            {id || userId || 'Unknown'}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">\n          {name || 'No name'}\n        </h3>\n        <p className=\"CurrentUser__email\">\n          {email || 'No email'}\n        </p>\n        <p className=\"CurrentUser__phone\">\n          {phone || 'No phone'}\n        </p>\n\n        <button\n          type=\"button\"\n          className=\"CurrentUser__button button\"\n          onClick={this.props.onClear}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  onClear: PropTypes.func.isRequired,\n};\n\nexport { CurrentUser };\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getAllTodos } from './api';\n\nclass App extends React.PureComponent {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const todos = (await getAllTodos())\n      .filter(({ title, completed, userId }) => title && userId);\n\n    this.setState(state => ({\n      ...state,\n      todos,\n    }));\n  }\n\n  clearSelectUserId = () => {\n    this.selectUserId(0);\n  }\n\n  selectUserId = (id) => {\n    this.setState(state => ({\n      ...state,\n      selectedUserId: id,\n    }));\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          {todos.length > 0 ? (\n            <TodoList\n              allTodos={todos}\n              onUserSelect={this.selectUserId}\n            />\n          ) : 'There are no todos'}\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                onClear={this.clearSelectUserId}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}